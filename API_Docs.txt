GET /index
expected input: none
returned result: array of bots in JSON format
	[
	{
		'userid': '123114125545345',
		'bot': {
			'id': 0,
			'code': 'return Math.floor(Math.random()*7);',
			'name': 'Bot0',
			'lang': 'js',
			'score': 800,
			'win': 2,
			'lose': 1
		}
	},
	{
		'userid': '19823712364987',
		'bot': {
			'id': 0,
			'code': 'return randint(0, 6)',
			'name': 'Bot0',
			'lang': 'js',
			'score': 800,
			'win': 0,
			'lose': 0
		}
	}
	]

POST /login
Content-Header: x-www-form-urlencoded
expected input: 'email' and 'fbid'
returned result:
	New User:
	{
		id: "the fbid being sent"
		email: "hello@hello.com,
		bots: [
			{
				code: "return randint(0,6)"
				id: 0
				lang: "js"
				lose: 0
				name: "Bot0"
				score: 800
				win: 0
			}
		]
	}

	Existing User:
	{
		id: 123,
		email: "hello@hello.com"
		bots: [
			{
				code: "return Math.floor(Math.random()*6);"
				id: 1
				lang: "js"
				lose: 0
				name: "Bot1"
				score: 800
				win: 0
			},
			{
				code: "return randint(0,6)"
				id: 2
				lang: "python"
				lose: 10
				name: "Bot2"
				score: 800
				win: 11
			}
		]	
	}


GET /leaderboard
expected input: none
returned result: array of bots with its respective userid
[
	{
		"userid":"bob",
 		"bot":{"code":"return randint(0,6)","id":0,"lang":"python","lose":11,"name":"anotherUser's Bot","score":1000,"win":11}
 	},
	{
		"userid":"1234567",
		"bot":{"code":"return randint(0,6)","id":0,"lang":"js","lose":0,"name":"Bot0","score":800,"win":0}
	},
	{
		"userid":"kawi",
		"bot":{"code":"return randint(0,6)","id":2,"lang":"python","lose":10,"name":"Bot2","score":800,"win":11}
	},
	{
		"userid":"kawi",
		"bot":{"code":"return Math.floor(Math.random()*6);","id":1,"lang":"js","lose":0,"name":"Bot1","score":800,"win":0}
	}
]


POST /submit_bot
expected input: x-www-form-urlencoded Content-Header type
	'bot' - the actual code of the bot without method definition
	'lang' - the code language (only 2 possible value: 'python' or 'js')
	'userid' - the user id (also called facebook ID) of the bot
returned result:
	if error:
	{"success": false, "error": "invalid syntax"}
	{"success": false, "error": "bot cause invalid move"}

	if success (no error):
	{
		"success": true,
		"error": null,
		"bot": {
			'code': code,
			'id': 0,
			'lang': lang,
			'name': "Bot0",
			'score': 800,
			'win': 0,
			'lose': 0
		}
    }


POST /play
expected input: x-www-form-urlencoded Content-Header type
	bot1 = {
		'userid': 'kawi',
		'code': 'return Math.floor(Math.random()*7);',
		'botid': 1,
		'lang': 'js',
		'score': 800
	}
	bot2 = {
		'userid': 'bob',
		'code': 'return randint(0,6)',
		'botid': 0,
		'lang': 'python',
		'score': 800
	}
returned result:
{
	"winner":"bot2",
	"steps":[
		[["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		],[
		["","","","","","",""],
		["","","","","","",""],
		["W","","","","","",""],
		["R","","R","","","",""],
		["W","W","W","W","R","",""],
		["W","R","R","R","W","","R"]
		]
	]
}